#include<iostream> 
#include<string>
#include <iomanip> 
using namespace std;
// ------------------------------------ SORT AND FIND FUNTIONS --------------------------------

void shortToLong(string arr[], int n)
{
	for (int i = 0; i <= n; i++)
	{
		string temp = arr[i];


		int j = i - 1;
		while (j >= 0 && temp.length() < arr[j].length())
		{
			arr[j + 1] = arr[j];
			j--;
		}
		arr[j + 1] = temp;
	}
}

void longToShort(string arr[], int n)
{
	for (int i = 0; i <= n; i++)
	{
		string temp = arr[i];


		int j = i - 1;
		while (j >= 0 && temp.length() > arr[j].length())
		{
			arr[j + 1] = arr[j];
			j--;
		}
		arr[j + 1] = temp;
	}
}

void fromAtoZ(string arr[], int n)
{
	for (int i = 0; i <= n; i++)
	{
		string temp = arr[i];


		int j = i - 1;
		while (j >= 0 && temp < arr[j])
		{
			arr[j + 1] = arr[j];
			j--;
		}
		arr[j + 1] = temp;
	}
}

void fromZtoA(string arr[], int n)
{
	for (int i = 0; i <= n; i++)
	{
		string temp = arr[i];


		int j = i - 1;
		while (j >= 0 && temp > arr[j])
		{
			arr[j + 1] = arr[j];
			j--;
		}
		arr[j + 1] = temp;
	}
}

void searchString(string arr[], int& n)
{
	string search;
	int stringsFound = 0;
	cout << "What do you want to search for?";
	cin >> search;
	for (int i = 0; i < n; i++)
	{
		string temp = arr[i];
		if (temp.find(search) == 0)
		{
			cout << temp << endl;
			stringsFound++;
		}
	}
	if (stringsFound == 0)
	{
		cout << "No matching strings found!" << endl << endl;
	}
}

void searchCharacter(string arr[], int& n)
{
    string  userCharacter;
	int charactersFound = 0;
	cout << " What character do you want to search for?";
	cin >> userCharacter;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < arr[i].length(); j++)
		{
			string temp;
			temp = arr[i].at(j);

			if (temp.compare(userCharacter) == 0)
			{
				cout << arr[i] << endl;
				charactersFound++;
			}
		}
	}
	if (charactersFound == 0)
	{
		cout << "None of the strings have this character!" << endl << endl;
	}
}

void searchByLength(string arr[], int& n)
{
	int chosenLength;
	int stringsFound = 0;
	cout << "Whats the length of the searched strings?";
	cin >> chosenLength;
	for (int i = 0; i < n; i++)
	{
		string temp = arr[i];
		if (chosenLength == arr[i].length())
		{
			cout << temp << endl;
			stringsFound++;
		}
	}
	if(stringsFound ==0)
	{
		cout << "None of the strings have this length!" << endl << endl;
	}
}
// --------------------------------------------- EDIT FUNCTIONS --------------------------------------------------------------
void eraseByIndex(string arr[], int n , int index)
{
	
	int start;
	int num;
	cout << "Starting index?" << endl;
	cin >> start;
	cout << "How much?" << endl;
	cin >> num;
	arr[index].erase(start, num);

}

void showMatchingCharacters(int indexArray[], int& matchingChars, string userCharacter, int& choice)
{
	
	
	for (int j = 0; j < matchingChars; j++)
	{
		cout << indexArray[j] << " ";
	}

	
}
int checkCorrectInput(int indexArray[], int& matchingChars,  int& choice)
{
	int br1 = 0;
	for (int v = 0; v < matchingChars; v++)
	{
		if (choice == indexArray[v] )
		{
			br1++;
		}

	}
	return br1;
}

int checkCharacter(string userCharacter, int index , int indexArray[], string arr[])
{
	int i = 0;
	int matchingChars = 0;
	while (i < arr[index].length())
	{
		string temp;
		temp = arr[index].at(i);

		if (temp.compare(userCharacter) == 0)
		{
			matchingChars++;
			indexArray[matchingChars - 1] = i;
		}
		i++;
	}
	return matchingChars;
}

int IncorrectInput(string userCharacter, int index, int indexArray[], string arr[])
{
	int matchingChars;
	cout << "Try again";
	cin >> userCharacter;
	checkCharacter(userCharacter, index, indexArray, arr);
	matchingChars = checkCharacter(userCharacter, index, indexArray, arr);
	return matchingChars;
}

void eraseByCharacters(string arr[], int n, int index)
{
	    int choice;
		int indexArray[100];
		string userCharacter;
		int eraseNum;
		cout << "How many characters do you want to erase?" << endl;
		cin >> eraseNum;
		cout << "Enter the character you want to start with : ";
		cin >> userCharacter;
		checkCharacter(userCharacter , index , indexArray, arr);

		int matchingChars = checkCharacter(userCharacter, index, indexArray, arr);
		   	
		  
		while(matchingChars == 0)
		{
			matchingChars = IncorrectInput(userCharacter, index, indexArray, arr);
		}
			
			 if (matchingChars == 1)
			{
				arr[index].erase(indexArray[0], eraseNum);
				
			}
			 if (matchingChars > 1)
			{
				cout << "This character is seen more than once in your string." << endl;
				showMatchingCharacters(indexArray, matchingChars, userCharacter, choice);
				cout << " Choose one of them " << endl;
				cin >> choice;
				checkCorrectInput(indexArray, matchingChars, choice);

				while (checkCorrectInput(indexArray, matchingChars, choice) == 0)
				{
					cout << "This character was not found. Please try again." << endl;
					cin >> choice;
					checkCorrectInput(indexArray, matchingChars, choice);
				}
				if (checkCorrectInput(indexArray, matchingChars, choice) == 1)
				{
					arr[index].erase(choice, eraseNum);
				}
			}
}



void insertByIndex(string arr[], int n, int index)
{

	int start;
	string insertedString;
	cout << "Starting index?" << endl;
	cin >> start;
	cout << "What do you want to insert?" << endl;
	cin >> insertedString;
	arr[index].insert(start, insertedString);
}

void insertByCharacters(string arr[], int n, int index)
{
	int choice;
	int indexArray[100];
	string userCharacter;
	string insertedString;
	cout << "What do you want to insert?" << endl;
	cin >> insertedString;
	cout << "Enter the character you want to start inserting from : ";
	cin >> userCharacter;
	checkCharacter(userCharacter, index, indexArray, arr);

	int matchingChars = checkCharacter(userCharacter, index, indexArray, arr);


	while (matchingChars == 0)
	{
		matchingChars = IncorrectInput(userCharacter, index, indexArray, arr);
	}

	if (matchingChars == 1)
	{
		arr[index].insert(indexArray[0]+1, insertedString);

	}
	if (matchingChars > 1)
	{
		cout << "This character is seen more than once in your string." << endl;
		showMatchingCharacters(indexArray, matchingChars, userCharacter, choice);
		cout << " Choose one of them " << endl;
		cin >> choice;
		checkCorrectInput(indexArray, matchingChars, choice);

		while (checkCorrectInput(indexArray, matchingChars, choice) == 0)
		{
			cout << "This character was not found. Please try again." << endl;
			cin >> choice;
			checkCorrectInput(indexArray, matchingChars, choice);
		}
		if (checkCorrectInput(indexArray, matchingChars, choice) == 1)
		{
			arr[index].insert(choice+1, insertedString);
			
		}
	}
}

void replaceByIndex(string arr[], int n, int index)
{
	int start;
	string insertedString;
	cout << "Starting index?" << endl;
	cin >> start;
	cout << "What do you want to replace it with?" << endl;
	cin >> insertedString;
	arr[index].replace(start, insertedString.length(), insertedString);
}

void replaceByCharacters(string arr[], int n, int index)
{
	int choice;
	int indexArray[100];
	string userCharacter;
	string insertedString;
	cout << "Enter the character you want to start inserting from : ";
	cin >> userCharacter;
	cout << "What do you want to replace it with?" << endl;
	cin >> insertedString;
	checkCharacter(userCharacter, index, indexArray, arr);

	int matchingChars = checkCharacter(userCharacter, index, indexArray, arr);


	while (matchingChars == 0)
	{
		matchingChars = IncorrectInput(userCharacter, index, indexArray, arr);
	}

	if (matchingChars == 1)
	{
		arr[index].replace(indexArray[0], insertedString.length(), insertedString);

	}
	if (matchingChars > 1)
	{
		cout << "This character is seen more than once in your string." << endl;
		showMatchingCharacters(indexArray, matchingChars, userCharacter, choice);
		cout << " Choose one of them " << endl;
		cin >> choice;
		checkCorrectInput(indexArray, matchingChars, choice);

		while (checkCorrectInput(indexArray, matchingChars, choice) == 0)
		{
			cout << "This character was not found. Please try again." << endl;
			cin >> choice;
			checkCorrectInput(indexArray, matchingChars, choice);
		}
		if (checkCorrectInput(indexArray, matchingChars, choice) == 1)
		{
			arr[index].replace(choice , insertedString.length(), insertedString);

		}
	}
}

 // ------------------------------------------------- REPORTS  --------------------------------------------------------------

void reportLongest(string arr[], int& n)
{
	int max = 0;
	int maxIndex;
	for (int i = 0; i <= n; i++)
	{
		string temp = arr[i];
		if (temp.length() > max)
		{
			max = temp.length();
			maxIndex = i;
		}
	}
	cout << "Longest string : ";
	cout << arr[maxIndex];
}

void reportShortest(string arr[], int& n)
{
	int minIndex;
	int min = 1000;
	for (int i = 0; i < n; i++)
	{
		string temp = arr[i];

		if (temp.length() < min)
		{
			min = temp.length();
			minIndex = i;
		}

	}
	cout << "Shortest string : ";
	cout << arr[minIndex];
}

// -----------------------  STRING INPUT AND OUTPUT ------------------------------------------------



void createString(string arr[], int& n)
{
	getline(cin, arr[n]);	
}

void addString(string arr[], int& n)
{
	int br;
	cout << "how many?" << endl;
	cin >> br;
	createString(arr, n);
	for (int i = 0; i < br; i++)
	{
		createString(arr, n);
		n++;
	}
}

void printArray(string arr[], int n)
{
	if (n > 0)
	{
		for (int i = 0; i <= n; i++)
		{
			if (i != n)
			{
				cout << i << " : " << arr[i] << endl;
			}
		}
	}
	else
	{
		cout << "There are no strings inserted yet. " << endl << endl
			<< "You can insert some using the |Add string| button of the menu." << endl << endl;
	}
}

// ------------------------------------------- MENUS -----------------------------------------------------------------

void eraseStringMenu(string arr[], int n)
{
	int choice;
	int index;
	cout << "Choose an index to change";
	cin >> index;
	cout << "How do you want to choose a part to erase :" << endl;
	cout << "1. By indexes" << endl;
	cout << "2. By characters" << endl;
	cin >> choice;
	switch (choice)
	{
	case 1:
		eraseByIndex(arr, n, index);
		break;
	case 2:
		eraseByCharacters(arr, n, index);
		break;
	default:
		cout << "The number you choose was not valid!" << endl << endl;
		break;
	}
}

void insertStringMenu(string arr[], int n)
{
	int choice;
	int index;
	cout << "Choose an index to change";
	cin >> index;
	cout << "How do you want to insert into the string :" << endl;
	cout << "1. By indexes" << endl;
	cout << "2. By characters" << endl;
	cin >> choice;
	switch (choice)
	{
	case 1:
		insertByIndex(arr, n, index);
		break;
	case 2:
		insertByCharacters(arr, n, index);
		break;
	default:
		cout << "The number you choose was not valid!" << endl << endl;
		break;
	}
}

void replaceStringMenu(string arr[], int n)
{
	int choice;
	int index;
	cout << "Choose an index to change";
	cin >> index;
	cout << "How do you want to replace into the string :" << endl;
	cout << "1. By indexes" << endl;
	cout << "2. By characters" << endl;
	cin >> choice;
	switch (choice)
	{
	case 1:
		replaceByIndex(arr, n, index);
		break;
	case 2:
		replaceByCharacters(arr, n, index);
		break;
	default:
		cout << "The number you choose was not valid!" << endl << endl;
		break;
	}
}

void sortStringMenu(string arr[], int& n)
{
	if (n > 0)
	{
		int choice;
		cout << "Choose a way to sort";

		cout << " --- MENU ---" << endl;
		cout << "1. By size(short to long)" << endl;
		cout << "2. By size(long to short) " << endl;
		cout << "3. alphabetically(A to Z)" << endl;
		cout << "4. alphabetically(Z to A)" << endl;
		cin >> choice;

		switch (choice)
		{
		case 1:
			shortToLong(arr, n);
			break;

		case 2:
			longToShort(arr, n);
			break;

		case 3:
			fromAtoZ(arr, n);
			break;

		case 4:
			fromZtoA(arr, n);
			break;
		default:
			cout << "The number you choose was not valid!" << endl << endl;
			break;
		}
	}
	else
	{
		cout << "There are no strings inserted yet. " << endl << endl
			<< "You can insert some using the |Add string| button of the menu." << endl << endl;
	}
}

void searchMenu(string arr[], int n)
{

	if (n > 0)
	{
		int choice;
		cout << "Choose a way to search" << endl;
		cout << " --- MENU ---" << endl;
		cout << "1. Search for a string" << endl;
		cout << "2. Search for a character " << endl;
		cout << "3. Search for a string with given length" << endl;
		cin >> choice;

		switch (choice)
		{
		case 1:
			searchString(arr, n);
			break;
		case 2:
			searchCharacter(arr, n);
			break;
		case 3:
			searchByLength(arr, n);
			break;
		default:
			cout << "The number you choose was not valid!" << endl << endl;
			break;
		}
	}
	else
	{
		cout << "There are no strings inserted yet. " << endl << endl
			<< "You can insert some using the |Add string| button of the menu." << endl << endl;
	}
}

void editStringMenu(string arr[], int n)
{

	if (n > 0)
	{
		int choice;
		cout << "Choose a way to edit" << endl;
		cout << " --- MENU ---" << endl;
		cout << "1. Erase" << endl;
		cout << "2. Add " << endl;
		cout << "3. Replace" << endl;
		

		cin >> choice;

		switch (choice)
		{
		case 1:
			eraseStringMenu(arr, n);
			break;
		case 2:
			insertStringMenu(arr, n);
			break;
		case 3:
			replaceStringMenu(arr, n);
			break;
		default:
			cout << "The number you choose was not valid!" << endl << endl;
			break;
		}
	}
	else
	{
		cout << "There are no strings inserted yet. " << endl << endl
			<< "You can insert some using the |Add string| button of the menu." << endl << endl;
	}
}

void reportMenu(string arr[], int n)
{

	if (n > 0)
	{
		int choice;
		cout << "Choose a report" << endl;

		cout << " --- MENU ---" << endl;
		cout << "1. Longest string" << endl;
		cout << "2. Shortest string" << endl;
		cin >> choice;

		switch (choice)
		{
		case 1:
			reportLongest(arr, n);
			break;
		case 2:
			reportShortest(arr, n);
			break;

			break;
		default:
			cout << "The number you choose was not valid!" << endl << endl;
			break;
		}
	}
	else
	{
		cout << "There are no strings inserted yet. " << endl << endl
			<< "You can insert some using the |Add string| button of the menu." << endl << endl;
	}
}

bool showMenu(string arr[], int& n)
{

	int choice;
	cout << " --- MAIN MENU ---" << endl;
	cout << "1. Show all strings" << endl;
	cout << "2. Add strings" << endl;
	cout << "3. Edit a string" << endl;          // main menu
	cout << "4. Sort" << endl;
	cout << "5. See the reports" << endl;
	cout << "6. Search for a string" << endl;
	cout << "7. Exit the program" << endl;

	cin >> choice;

	switch (choice)
	{
	case 1:
		printArray(arr, n);
		break;

	case 2:
		addString(arr, n);
		
		break;

	case 3:
		editStringMenu(arr, n);
		break;

	case 4:
		sortStringMenu(arr, n);
		break;

	case 5:
		reportMenu(arr, n);
		break;

	case 6:
		searchMenu(arr, n);
		break;
	case 7:
		return false;

	default:
		cout << "The number you choose was not valid!" << endl << endl;
		break;
	}

	return true;
}

// -------------------------------------------- MAIN -----------------------------------------------------------------------

int main()
{
	string arr[1000];
	int n = 0;
	bool doShowMenu;

	do {

		doShowMenu = showMenu(arr, n);
	} while (doShowMenu);

}

